name: 'Keploy test Keploy'
description: "An action to test keploy with keploy"
author: gouravkrosx
branding:
  icon: 'refresh-cw'
  color: 'orange'

inputs:
  branch: 
    description: Branch of the repository you want to use
    required: true  
    default: 'main'
  working-directory:
    description: Relative path under $GITHUB_WORKSPACE where the repository was checked out
    required: true
  command:
    description: Command to run the application
    required: true
  keploy-path:
    description: Path to keploy pre-recorded test cases
    required: true
    default: ./
  config-path: 
    description: Path to the config file
    required: true
    default: ./  
  delay:
    description: Time to start application
    required: true
    default: 10
  ci-mode:
    description: The CI mode specifies whether the Keploy binary should be hosted and which one should be built. "recordHosted-testBuild" (0) or "recordBuild-testHosted" (1).
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup GITHUB_PATH for script
      run: |
        echo "${{ github.action_path }}" >> $GITHUB_PATH
        echo "${{ inputs.working-directory }}"
      shell: bash
    - name: Grant permissions
      run: chmod +x ${GITHUB_ACTION_PATH}/install.sh
      shell: sh
    - id: keploy-test-keploy
      name: Run Script
      run: |
        ${GITHUB_ACTION_PATH}/install.sh
       
      shell: bash
      env:
        BRANCH: ${{ inputs.branch }}
        WORKDIR: ${{ inputs.working-directory }}
        COMMAND : ${{ inputs.command }}
        KEPLOY_PATH: ${{inputs.keploy-path}}
        CONFIG_PATH: ${{inputs.config-path}}
        DELAY: ${{ inputs.delay }}
        CI_MODE: ${{ inputs.ci-mode }}
      outputs:
        script_output: ${{ steps.keploy-test-keploy.outputs.script_output }}
    # Example of using the output in a subsequent step
    - name: Use Script Output
      run: |
          echo "Output from script: ${{ steps.keploy-test-keploy.outputs.script_output }}"        

                  
    # - name: Comment on PR
    #   if: success()
    #   uses: actions/github-script@v6
    #   env:
    #     KEPLOY_REPORT: ${{ steps.keploy-test-report.outputs.KEPLOY_REPORT }}
    #   with:
    #     github-token: ${{ github.token }}
    #     script: |
    #       if (!process.env.KEPLOY_REPORT) {
    #         console.error('Error: KEPLOY_REPORT not found.');
    #         process.exit(1);
    #       }
    #       github.rest.issues.createComment({
    #         issue_number: context.issue.number,
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         body: process.env.KEPLOY_REPORT
    #       })
    #   shell: bash